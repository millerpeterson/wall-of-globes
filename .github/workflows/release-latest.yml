name: Go

on:
  push:
    tags:
      - "latest"

jobs:

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Create tag
        id: create_tag
        run: |
          tag=$(basename "${{ github.ref }}")
          echo "::set-output name=tag::$tag"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.create_tag.outputs.tag }}
          release_name: ${{ steps.create_tag.outputs.tag }}
          draft: true
          prerelease: false

      - name: Create artifact info files
        run: |
          mkdir info
          echo "${{ steps.create_release.outputs.id }}" > info/release_id
          echo "${{ steps.create_release.outputs.upload_url }}" > info/upload_url

      - uses: actions/upload-artifact@v1
        with:
          name: info
          path: info

  build:
    needs: [release]
    strategy:
      fail-fast: false
      matrix:
        include:
          - goos: darwin
            goarch: arm64
          - goos: linux
            goarch: arm
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.17

    - name: Install Task
      uses: arduino/setup-task@v1

    - name: Test
      run: task test

    - uses: actions/download-artifact@v1
      with:
        name: info

    - name: Set upload_url
      id: upload_info
      run: |
        upload_url=$(cat info/upload_url)
        echo "::set-output name=upload_url::$upload_url"

    - name: Build globe
      run: task build-globe
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}

    - name: Upload globe binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.upload_info.outputs.upload_url }}
        asset_path: bin/${{ matrix.goos }}/${{ matrix.goarch }}/globe
        asset_name: globe-${{ matrix.goos }}-${{ matrix.goarch }}
        asset_content_type: application/octet-stream

  publish:
    name: Publish Release
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v1
        with:
          name: info

      - name: Set publish_info
        id: publish_info
        run: |
          release_id=$(cat info/release_id)
          echo "::set-output name=release_id::$release_id"

      - uses: eregon/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ steps.publish_info.outputs.release_id }}

      - uses: eregon/keep-last-n-releases@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          n: 3
          remove_tags_without_release: true