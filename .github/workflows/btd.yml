name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Create tag
        id: create_tag
        run: |
          tag=$(basename "${{ github.ref }}")
          echo "::set-output name=tag::$tag"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.create_tag.outputs.tag }}
          release_name: ${{ steps.create_tag.outputs.tag }}
          draft: true
          prerelease: false

      - name: Create artifact info files
        run: |
          mkdir info
          echo "${{ steps.create_release.outputs.id }}" > info/release_id
          echo "${{ steps.create_release.outputs.upload_url }}" > info/upload_url

      - uses: actions/upload-artifact@v1
        with:
          name: info
          path: info

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.17

    - name: Install Task
      uses: arduino/setup-task@v1

    - name: Test
      run: task test

    - name: Build globe for Pi
      run: task build-globe
      env:
        GOOS: linux
        GOARCH: arm

    - name: Build globe for OSX
      run: task build-globe
      env:
        GOOS: darwin
        GOARCH: arm64

