version: '3'

vars:
  MULTICAST_ADDR: 225.0.0.1
  VLC_CMD: VLC

tasks:
  build-globe:
    desc: Build the display server.
    cmds:
      - go build -o {{.OUTPUT_FILE}} cmd/globe/globe.go
    vars:
      OUTPUT_FILE: '{{default "bin/globe" .OUTPUT_FILE}}'

  build-globe-pi:
    desc: Build the display server for a Raspberry Pi.
    cmds:
      - task: build-globe
        vars:
          OUTPUT_FILE: bin/globe-pi
    env:
      GOOS: linux
      GOARCH: arm
      GOARM: 5

  run-globe:
    desc: Start a display server.
    cmds:
      - go run cmd/globe/globe.go

  globe-dev-play:
    desc: Request a local globe to play a file with a crop.
    cmds:
      - curl -d "file=terminator.mp4&top=400" -X POST http://localhost:8081/play

  globe-dev-stop:
    desc: Request a local globe to play a file with a crop.
    cmds:
      - curl -X POST http://localhost:8081/stop

  sync-to-pi:
    desc: Sync source code (not binaries) to pi. Pass pi IP as arg.
    cmds:
      - rsync -avz --exclude bin . pi@{{.CLI_ARGS}}:~/wall-of-globes

  multicast-stream:
    desc: Start streaming a file to a multi-cast address (default 225.0.0.1). Pass the file path as arg.
    cmds:
      - echo "{{.VLC_CMD}} -vvv {{.CLI_ARGS}} --sout udp:{{.MULTICAST_ADDR}} --loop"

  play-stream:
    desc: Play a stream from a multi-cast address with a crop (with pi video args).
    cmds:
      - echo "{{.VLC_CMD}} -vvv udp://@{{.MULTICAST_ADDR}} --video-filter=croppadd{croptop=100} --codec avcodec,none"

  run-company:
    desc: Call out to globes to run as configured by test_wall.json.
    cmds:
      - go run cmd/company/company.go test_wall.json terminator.mp4

  probe-dims:
    desc: Use ffprobe to determine media dimensions.
    cmds:
      - ffprobe -v error -select_streams v:0 -show_entries stream=width,height -of csv=s=x:p=0 {{.CLI_ARGS}}

  sync-ssh-key:
    desc: Add an SSH key to a remote machine.
    cmds:
      - ssh-copy-id -i ~/.ssh/id_ed25519 pi@{{.CLI_ARGS}}