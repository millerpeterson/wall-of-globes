version: '3'

vars:
  MULTICAST_ADDR: 225.0.0.1
  VLC_CMD: VLC

tasks:
  build-globe:
    desc: Build the display server.
    cmds:
      - go build -o "bin/$GOOS/$GOARCH/globe" cmd/globe/globe.go
    vars:
      OUTPUT_FILE:
    env:
      GOOS: linux
      GOARCH: arm

  globe:
    desc: Start a local display server.
    cmds:
      - go run cmd/globe/globe.go

  globe-dev-play:
    desc: Request a local globe to play a file (from its local filesystem) with a crop.
    cmds:
      - curl -d "file=terminator.mp4&top=400" -X POST http://localhost:8081/play

  globe-dev-stop:
    desc: Request a local globe to play a file with a crop.
    cmds:
      - curl -X POST http://localhost:8081/stop

  sync-src:
    desc: Sync source code (not binaries) to remote machine. <<host>>
    cmds:
      - rsync -avz --exclude bin . {{.CLI_ARGS}}:~/wall-of-globes

  multicast-stream:
    desc: Start multicast streaming. <<file>>
    cmds:
      - echo "{{.VLC_CMD}} -vvv {{.CLI_ARGS}} --sout udp:{{.MULTICAST_ADDR}} --loop"

  pi-play-stream:
    desc: Get the command to play a multicast stream from a Pi.
    cmds:
      - echo "{{.VLC_CMD}} -vvv udp://@{{.MULTICAST_ADDR}} --video-filter=croppadd{croptop=100} --codec avcodec,none"

  build-company:
    desc: Build stream broadcasting / central command application.
    cmds:
      - go build -o "bin/$GOOS/$GOARCH/company" cmd/company/company.go
    vars:
      OUTPUT_FILE:
    env:
      GOOS: darwin
      GOARCH: arm64

  company:
    desc: Play a video file on a wall. <<wall-config>> <<file>>
    cmds:
      - go run cmd/company/company.go {{.CLI_ARGS}}

  probe-dims:
    desc: Use ffprobe to determine media dimensions. <<file>>
    cmds:
      - ffprobe -v error -select_streams v:0 -show_entries stream=width,height -of csv=s=x:p=0 {{.CLI_ARGS}}

  sync-ssh-key:
    desc: Add an SSH key to a remote machine. <<host>>
    cmds:
      - ssh-copy-id -i ~/.ssh/id_ed25519 {{.CLI_ARGS}}

  pi-autostart-globe:
    desc: Make a Pi run the display server at startup. <<host>>
    cmds:
      - ssh {{.CLI_ARGS}} 'mkdir -p /home/pi/.config/autostart'
      - scp globe.desktop {{.CLI_ARGS}}:/home/pi/.config/autostart/globe.desktop

  multiply-sync:
    desc: Sync globe binaries over SSH. <<wall-config>>
    deps:
      - build-globe
    cmds:
      - go run cmd/multiply/multiply.go sync {{.CLI_ARGS}}

  multiply-reboot:
    desc: Tell globe machines to reboot. <<wall-config>>
    cmds:
      - go run cmd/multiply/multiply.go reboot {{.CLI_ARGS}}

  multiply-setup:
    desc: Configure machines in a wall to run globe at startup. <<wall-config>>
    cmds:
      - go run cmd/multiply/multiply.go setup {{.CLI_ARGS}}

  test:
    desc: Run tests
    cmds:
      - go test -v ./...
